[{"C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Layout.js":"3","C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Api.js":"4"},{"size":390,"mtime":1612553290015,"results":"5","hashOfConfig":"6"},{"size":337,"mtime":1612553290013,"results":"7","hashOfConfig":"6"},{"size":5106,"mtime":1612553290014,"results":"8","hashOfConfig":"6"},{"size":1481,"mtime":1612555711912,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"dggzbp",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\index.js",[],["20","21"],"C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Layout.js",["22","23","24","25"],"import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport gdfLogo from './gdfLogo.png';\r\n\r\nconst drawerWidth = 240;\r\nconst appBarHeight = AppBar.height;\r\nconst listMargin = {\r\n  marginTop: '0px',\r\n  paddingTop: '0px'\r\n}\r\n\r\nconst gdfLogoStyle = {\r\n  width: drawerWidth,\r\n  paddingTop: '0px',\r\n  height: appBarHeight,\r\n  marginBottom: '0px'\r\n}\r\n\r\nconst appBarStyle = {\r\n  color: 'green'\r\n}\r\n\r\nconst hrmsHeader = {\r\n  color: 'black',\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      paddingTop: '1%',\r\n      paddingBottom: '2%',\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    paddingTop: theme.spacing(11),\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <img src={gdfLogo} alt=\"Logo\" style = {gdfLogoStyle} />;\r\n      <div className={classes.toolbar} style = {listMargin} />\r\n      <List>\r\n        {['Employee Search', 'Add Employee', 'Employee History', 'Something', 'Something Else', 'More'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar} color = \"transparent\" style = {appBarStyle}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n            style = {listMargin}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography>\r\n            <Typography variant=\"h3\" noWrap>\r\n              GUYANA DEFENCE FORCE\r\n            </Typography>\r\n            <Typography variant=\"h4\" style = {hrmsHeader} noWrap>\r\n              Human Resources Management System\r\n            </Typography>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n             style = {listMargin}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","C:\\Users\\andre\\Desktop\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Api.js",["26","27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":15},{"ruleId":"33","severity":1,"message":"37","line":9,"column":8,"nodeType":"35","messageId":"36","endLine":9,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":20},{"ruleId":"33","severity":1,"message":"39","line":14,"column":8,"nodeType":"35","messageId":"36","endLine":14,"endColumn":16},{"ruleId":"33","severity":1,"message":"40","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},{"ruleId":"33","severity":1,"message":"41","line":3,"column":10,"nodeType":"35","messageId":"36","endLine":3,"endColumn":24},{"ruleId":"33","severity":1,"message":"42","line":28,"column":11,"nodeType":"35","messageId":"36","endLine":28,"endColumn":33},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'InboxIcon' is defined but never used.","'ListItemIcon' is defined but never used.","'MailIcon' is defined but never used.","'useEffect' is defined but never used.","'AddBoxOutlined' is defined but never used.","'getEmployeeByFirstName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]