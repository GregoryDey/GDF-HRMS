[{"C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\index.js":"1","C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\App.js":"2","C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Api.js":"3","C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Layout.js":"4","C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\searchpage.js":"5"},{"size":431,"mtime":1612747996924,"results":"6","hashOfConfig":"7"},{"size":581,"mtime":1612753135941,"results":"8","hashOfConfig":"7"},{"size":1448,"mtime":1612750011231,"results":"9","hashOfConfig":"7"},{"size":5592,"mtime":1612766626000,"results":"10","hashOfConfig":"7"},{"size":2479,"mtime":1612752073969,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jschfz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\index.js",[],["24","25"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\App.js",[],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Api.js",["26"],"import React, { useState } from \"react\";\r\nimport Axios from 'axios'; // remember to npm install Axios\r\n//import { AddBoxOutlined } from \"@material-ui/icons\";\r\n//import { useState } from 'react';\r\n//import { useEffect } from 'react';\r\n\r\nfunction Api() { \r\n\r\n    const [employee, setEmployee] = useState(\"\")\r\n\r\n    //const getJoke = () => {\r\n     //   Axios.get(\"https://official-joke-api.appspot.com/random_joke\").then((response) => {\r\n            //console.log(response);\r\n     //       setJoke(response.data.setup + \"...\" + response.data.punchline);\r\n     //   })\r\n   // }\r\n    \r\n\r\n   //calling endpoints \r\n    const getEmployeeByRegNumber = (RNumber) => {\r\n        Axios.get(\"https://localhost:44353/api/EmployeeInfo/regnumber/\" + RNumber).then((response) => {\r\n            //console.log(response);\r\n            setEmployee(response.data.Title + \"...\" + response.data.Fname);\r\n            // which ever field you need it will be response.data.fieldName\r\n        })\r\n    }\r\n\r\n    const getEmployeeByFirstName = (Fname) => {\r\n        Axios.get(\"https://localhost:44353/api/EmployeeInfo/fname/\" + Fname).then((response) => {\r\n            //console.log(response);\r\n            setEmployee(response.data.Title + \"...\" + response.data.Fname);\r\n        })\r\n    }\r\n\r\n\r\n\r\nreturn (\r\n    \r\n<div>Hello api area <button onClick={() => getEmployeeByRegNumber(12345)}>Get employee by regNumber</button>\r\n\r\n{employee }\r\n</div>\r\n\r\n);\r\n  }\r\n\r\n  export default Api;","C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\Layout.js",["27","28"],"C:\\MyStuff\\GDF-HRMS-Project\\GDF-HRMS\\front-end\\gdf-hrms\\src\\searchpage.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":28,"column":11,"nodeType":"35","messageId":"36","endLine":28,"endColumn":33},{"ruleId":"33","severity":1,"message":"37","line":9,"column":8,"nodeType":"35","messageId":"36","endLine":9,"endColumn":17},{"ruleId":"33","severity":1,"message":"38","line":33,"column":7,"nodeType":"35","messageId":"36","endLine":33,"endColumn":17},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'getEmployeeByFirstName' is assigned a value but never used.","Identifier","unusedVar","'InboxIcon' is defined but never used.","'listMargin' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]